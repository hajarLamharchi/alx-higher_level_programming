#2-matrix_divided

==============================
test file for 0-add_integer.py
==============================

this module defines the function def add_integer(a, b=98)
this function divides all elements of a matrix and retuens a new matrix

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[-1, -2, -3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[-0.33, -0.67, -1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[1.5, 2.5, 4.9], [4, 5, 6]]
>>> matrix_divided(matrix, 1.5)
[[1.0, 1.67, 3.27], [2.67, 3.33, 4.0]]

>>> matrix = [[1.5, 2.5, 4.9], [-4, -5, -6]]
>>> matrix_divided(matrix, -2)
[[-0.75, -1.25, -2.45], [2.0, 2.5, 3.0]]

>>> matrix = [[1.5, 2.5, 4.9], [4, 5, 6, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [['abc', 2.5, 4.9], [4, 5, 6, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[None, 2.5, 4.9], [4, 5, 6, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 4], [4, 5, 3]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[1j, 2, 4], [4, 5, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
